{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A nested bar chart example, with bars grouped by category.",
  "width": 720,
  "height": 600,
  "padding": 0,
  "autosize": "pad",
  "signals": [
    {"name": "totalAnswers", "update": "data('answers').length"},
    {"name": "barHeight", "value": "15"},
    {
      "name": "navyOpacity",
      "value": 1
    }
  ],
  "data": [
    {
      "name": "answers",
      "url": "https://wikirate.org/Walk_Free_Foundation+MSA_policy_revised+answer/answer_list.json?limit=0&filter[status]=known&filter[company_group][]=MSA+Asset+Managers&filter[year]=latest",
      "transform": [
        {
          "type": "formula",
          "expr": "split(datum.value, ', ')",
          "as": "value_array"
        }
      ]
    },
    {
      "name": "directs",
      "url": "https://wikirate.org/Walk_Free_Foundation+MSA_policy_applicable_to_tier_1_binary+answer/answer_list.json?limit=0&filter[status]=known&filter[company_group][]=MSA+Asset+Managers&filter[year]=latest",
      "transform": [
        {"type": "aggregate", "groupby": ["value"]},
        {
          "type": "impute",
          "key": "value",
          "keyvals": ["Yes"],
          "field": "count",
          "value": 0
        },
        {
          "type": "joinaggregate",
          "fields": ["count"],
          "ops": ["sum"],
          "as": ["denominator"]
        },
        {"type": "filter", "expr": "datum.value == 'Yes'"},
        {"type": "formula", "expr": "'have policy'", "as": "term"},
        {"type": "formula", "expr": "'(direct / tier 1)'", "as": "parens"}
      ]
    },
    {
      "name": "beyonds",
      "url": "https://wikirate.org/Walk_Free_Foundation+MSA_policy_applicable_beyond_tier_1_binary+answer/answer_list.json?limit=0&filter[status]=known&filter[company_group][]=MSA+Asset+Managers&filter[year]=latest",
      "transform": [
        {"type": "aggregate", "groupby": ["value"]},
        {
          "type": "impute",
          "key": "value",
          "keyvals": ["Yes"],
          "field": "count",
          "value": 0
        },
        {
          "type": "joinaggregate",
          "fields": ["count"],
          "ops": ["sum"],
          "as": ["denominator"]
        },
        {"type": "filter", "expr": "datum.value == 'Yes'"},
        {"type": "formula", "expr": "'have policy'", "as": "term"},
        {"type": "formula", "expr": "'(beyond tier 1)'", "as": "parens"},
        {"type": "formula", "expr": "null", "as": "value"}

      ]
    },
    {
      "name": "subgroups",
      "values": [
        {"key": "(direct / tier 1)"},
        {"key": "(beyond tier 1)"},
        {"key": ""}
      ],
      "transform": [
        {"type": "window", "ops": ["row_number"], "as": ["seq"]}
      ]
    },
    {
      "name": "groups",
      "values": [
        {
          "title": "Have a Modern Slavery Policy",
          "term": "have policy"
        },
        {
          "title": "Prohibit forced labour",
          "term": "Prohibit use of forced labour"
        },
        {
          "title": "Requires Suppliers to Comply with Laws & Policies",
          "term": "Suppliers comply with laws and company’s policies"
        },
        {
          "title": "Contracts including Modern Slavery Clauses",
          "term": "Contracts include clauses on forced labour"
        },
        {
          "title": "Code of Conduct includes Modern Slavery Clauses",
          "term": "Code of conduct or supplier code includes clauses on slavery and human trafficking"
        },
        {
          "title": "Prohibit Child labour",
          "term": "Prohibit use of child labour"
        },
        {
          "title": "Requires Suppliers to Protect Migrant Workers",
          "term": "Suppliers protect migrant workers"
        },
        {
          "title": "Requires Suppliers to Produce Own Statement",
          "term": "Suppliers produce their own statement"
        },
        {
          "title": "Prohibit Recruitment Fees",
          "term": "Prohibit charging of recruitment fees to employee"
        }
      ],
      "transform": [{"type": "window", "ops": ["row_number"], "as": ["seq"]}]
    },
    {
      "name": "discounts",
      "source": "answers",
      "transform": [
        {"type": "flatten", "fields": ["value_array"], "as": ["value"]},
        {"type": "aggregate", "ops": ["count"], "groupby": ["value"]},
        {
          "type": "formula",
          "as": "term",
          "expr": "replace(datum.value, / \\(.*/, '')"
        },
        {
          "type": "formula",
          "as": "parens",
          "expr": "replace(datum.value, /^[^\\(]*/, '')"
        },
        {
          "type": "formula",
          "as": "parens",
          "expr": "replace(datum.parens, '(wages / freedom of association etc) ', '')"
        },
        {
          "type": "impute",
          "key": "term",
          "keyvals": [
            "Prohibit use of forced labour",
            "Suppliers comply with laws and company’s policies",
            "Contracts include clauses on forced labour",
            "Code of conduct or supplier code includes clauses on slavery and human trafficking",
            "Prohibit use of child labour",
            "Suppliers protect migrant workers",
            "Suppliers produce their own statement",
            "Prohibit charging of recruitment fees to employee"
          ],
          "field": "parens",
          "value": "(direct / tier 1)"
        },
        {
          "type": "formula",
          "expr": "if(datum.count == null, 0, datum.count)",
          "as": "count"
        },
        {
          "type": "impute",
          "groupby": ["term"],
          "key": "parens",
          "field": "count",
          "value": 0
        },
        {"type": "formula", "expr": "totalAnswers", "as": "denominator"},
        {"type": "collect", "sort": {"field": ["term"]}}
      ]
    },
    {
      "name": "counts",
      "source": ["directs", "beyonds", "discounts"],
      "transform": [
        {
          "type": "lookup",
          "from": "groups",
          "key": "term",
          "fields": ["term"],
          "values": ["seq"],
          "as": ["group_seq"]
        },
        {
          "type": "lookup",
          "from": "subgroups",
          "key": "key",
          "fields": ["parens"],
          "values": ["seq"],
          "as": ["subgroup_seq"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum.group_seq) && (datum.subgroup_seq < 3)"
        },
        {"type": "collect", "sort": {"field": ["group_seq", "subgroup_seq"]}},
        {
          "type": "formula",
          "expr": "datum.count + '/' + totalAnswers",
          "as": "count_label"
        },
        {
          "type": "formula",
          "expr": "if(datum.value == null, datum.term + datum.parens, datum.value)",
          "as": "value"
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "xscale",
      "domain": {"data": "counts", "field": "denominator"},
      "nice": true,
      "zero": true,
      "type": "linear",
      "range": "width"
    },
    {
      "name": "ygroupscale",
      "range": "height",
      "domain": {"data": "counts", "field": "term"},
      "type": "band",
      "padding": 0.4
    },
    {
      "name": "color",
      "type": "ordinal",
      "domain": {"data": "counts", "field": "subgroup_seq"},
      "range": ["#FF9300", "#FFDC00", "#FE0000"]
    }
  ],
  "marks": [
    {
      "type": "group",
      "from": {
        "facet": {"name": "faceted_counts", "groupby": "term", "data": "counts"}
      },
      "encode": {
        "enter": {
          "fill": {"value": "grey"},
          "y": {"scale": "ygroupscale", "field": "term"}
        }
      },
      "scales": [
        {
          "name": "yscale",
          "type": "band",
          "range": "height",
          "domain": {"data": "faceted_counts", "field": "value"},
          "padding": 0.1
        }
      ],
      "signals": [{"name": "height", "update": "bandwidth('ygroupscale')"}],
      "marks": [
        {
          "type": "rect",
          "from": {"data": "faceted_counts"},
          "encode": {
            "update": {
              "x": {"value": 0},
              "x2": {"scale": "xscale", "field": "denominator"},
              "y": {"scale": "yscale", "field": "value"},
              "height": {"signal": "barHeight"},
              "fill": {"value": "#000028"},
              "opacity": {"signal": "navyOpacity"}
            }
          }
        },
        {
          "type": "rect",
          "from": {"data": "faceted_counts"},
          "encode": {
            "update": {
              "x": {"value": 0},
              "x2": {"scale": "xscale", "field": "count"},
              "y": {"scale": "yscale", "field": "value"},
              "height": {"signal": "barHeight"},
              "fill": {"scale": "color", "field": "subgroup_seq"}
            }
          }
        },
        {
          "type": "text",
          "from": {"data": "faceted_counts"},
          "encode": {
            "update": {
              "x": {"scale": "xscale", "field": "denominator", "offset": 4},
              "y": {"scale": "yscale", "field": "value", "offset": 2},
              "baseline": {"value": "top"},
              "fill": {"value": "#000028"},
              "text": {"field": "count_label"},
              "fontWeight": {"value": "bold"}
            }
          }
        }
      ]
    },
    {
      "type": "text",
      "from": {"data": "groups"},
      "encode": {
        "update": {
          "x": {"value": 0},
          "y": {"scale": "ygroupscale", "field": "term", "offset": -2},
          "text": {"field": "title"},
          "fill": {"value": "black"},
          "baseline": {"value": "bottom"},
          "fontWeight": {"value": "bold"}
        }
      }
    }
  ]
}
